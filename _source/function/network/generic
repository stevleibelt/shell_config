#!/bin/bash
#l

####
# list available local ip address
#
# @since 2018-10-01
# @author stev leibelt <artodeto@bazzline.net>
####
function net_bazzline_list_local_ip_address ()
{
    net_bazzline_record_function_usage ${FUNCNAME[0]}

    if [[ -f /bin/ip ]];
    then    
        ip addr | grep 'inet' | awk '{print $2}' | cut -f1 -d'/'
    else
        echo ":: Error"
        echo "   File >>/bin/ip<< not found."
    fi
}

####
# @param <string: host_ip_address>
#
# @see: https://linuxhandbook.com/check-open-ports-linux/
# @since: 2022-10-18
# @author stev leibelt <artodeto@bazzline.net>
####
function net_bazzline_network_list_open_ports ()
{
  if [[ $# -ne 1 ]];
  then
    net_bazzline_handle_invalid_number_of_arguments_supplied "${FUNCNAME[0]} <string: host_ip_address>"
  fi

  local HOST_IP_ADDRESS="${1}"

  nc -z -v ${HOST_IP_ADDRESS} 1-65535 2>&1 | grep -v 'Connection refused'
}

#s

####
# @param <string: ip_address_or_hostname>
# @param <string: service_name>
# @return <int: 0|1> - it also returns 0 if netcat is not available
#
# @see: https://utcc.utoronto.ca/~cks/space/blog/sysadmin/LittleScriptsVII
# @since 2022-05-13
# @author stev leibelt <artodeto@bazzline.net>
####
function net_bazzline_network_service_is_reachable ()
{
    local IP_ADDRESS_OR_HOSTNAME="${1}"
    local RETURN_CODE=0
    local SERVICE_NAME="${2}"

    if [[ -f /usr/bin/netcat ]];
    then
        if netcat -z ${IP_ADDRESS_OR_HOSTNAME} ${SERVICE_NAME}
        then
            local RETURN_CODE=0
        else
            local RETURN_CODE=1
        fi
    fi

    return ${RETURN_CODE};
}


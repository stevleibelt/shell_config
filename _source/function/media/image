#!/bin/bash

#c
####
# Creates thumbnails in the current path
#
# [@paramOne: string] - path to use, default is current working directory
####
# @see https://www.cyberciti.biz/tips/howto-linux-creating-a-image-thumbnails-from-shell-prompt.html
# @author stev leibelt <artodeto@bazzline.net>
# @since 2020-04-24
####
function net_bazzline_create_thumbnails()
{
    net_bazzline_record_function_usage ${FUNCNAME[0]}

    if [[ $# -eq 0 ]];
    then
        local CURRENT_WORKING_DIRECTORY=$(pwd)
    else
        local CURRENT_WORKING_DIRECTORY=${1}
    fi

    if [[ ! -d ${CURRENT_WORKING_DIRECTORY} ]];
    then
        echo ":: Invalid argument provided."
        echo "   Path >>${CURRENT_WORKING_DIRECTORY}<< is not a directory."

        return 1
    fi

    find . -name *.jpg -exec convert {} -resize 25% th_{} ;
    ls *.png | xargs -I {} convert -thumbnail 200 {} thumb.{}
    FILES="$@"
    for i in $FILES
    do
    echo "Prcoessing image $i ..."
    /usr/bin/convert -thumbnail 200 $i thumb.$i
    done
}

#i

####
# Converts images in directory with given size
#
# @param int size
# [@param] string name for the directory
#
# @author stev leibelt <artodeto@bazzline.net>
# @since 2013-10-02
####
function net_bazzline_image_batch_convert ()
{
    net_bazzline_record_function_usage ${FUNCNAME[0]}

    #@todo use parallel if available
    #hook - implement usage and style
    #@todo - implement usage of jpegoptim and optipng
    if [[ $# -eq 2 ]];
    then
        local DIRECTORY="${2}";
    else
        local DIRECTORY="resized_${1}";
    fi

    if [[ ! -d "${DIRECTORY}" ]];
    then
        echo ":: Creating directory >>${DIRECTORY}<<."
        /usr/bin/mkdir "${DIRECTORY}"
    fi

    for FILE in *.[jJ][pP][gG];
    do
        convert ${FILE} -verbose -geometry ${1}x${1} -quality 98% -comment "made with linux" "${DIRECTORY}/${FILE}"
    done;
}

####
# Converts images in directory with size of 1024
#
# [@param] string name for the directory
#
# @author stev leibelt <artodeto@bazzline.net>
# @since 2014-03-16
####
function net_bazzline_image_batch_convert_1024 ()
{
    net_bazzline_record_function_usage ${FUNCNAME[0]}

    if [[ $# -eq 1 ]];
    then
        net_bazzline_image_batch_convert 1024 "${1}"
    else
        net_bazzline_image_batch_convert 1024
    fi
}

####
# Converts images in directory with size of 1920
#
# [@param] string name for the directory
#
# @author stev leibelt <artodeto@bazzline.net>
# @since 2013-10-02
####
function net_bazzline_image_batch_convert_1920 ()
{
    net_bazzline_record_function_usage ${FUNCNAME[0]}

    if [[ $# -eq 1 ]];
    then
        net_bazzline_image_batch_convert 1920 "${1}"
    else
        net_bazzline_image_batch_convert 1920
    fi
}

####
# Converts images in directory with size of 1920
#
# [@param] string name for the directory
#
# @author stev leibelt <artodeto@bazzline.net>
# @since 2013-10-02
####
function net_bazzline_image_batch_convert_4096 ()
{
    net_bazzline_record_function_usage ${FUNCNAME[0]}

    if [[ $# -eq 1 ]];
    then
        net_bazzline_image_batch_convert 4096 "${1}"
    else
        net_bazzline_image_batch_convert 4096
    fi
}



####
# Converts images in directory with size of 640
#
# [@param] string name for the directory
#
# @author stev leibelt <artodeto@bazzline.net>
# @since 2014-08-03
####
function net_bazzline_image_batch_convert_640 ()
{
    net_bazzline_record_function_usage ${FUNCNAME[0]}

    if [[ $# -eq 1 ]];
    then
        net_bazzline_image_batch_convert 640 "${1}"
    else
        net_bazzline_image_batch_convert 640
    fi
}

####
# Converts png and jpg files in directory to webp
#
# [@param] int - image quality, default is 80
# [@param] string - path where the files are located, default is current directory
# [@param] int - geometry, default is keep the geometry
#
# @author stev leibelt <artodeto@bazzline.net>
# @since 2021-02-15
####
function net_bazzline_image_batch_convert_to_webp ()
{
    net_bazzline_record_function_usage ${FUNCNAME[0]}

    #@todo use parallel if available
    local IMAGE_QUALITY=${1:-80}

    if [[ $# -eq 2 ]];
    then
        local DIRECTORY="${2}";
    else
        local DIRECTORY=$(pwd)
    fi

    if [[ $# -eq 3 ]];
    then
        local GEOMETRY="${3}";

        for FILE in *.[jJ][pP][gG];
        do
            convert ${FILE} -verbose -geometry ${GEOMETRY}x${GEOMETRY} -quality ${IMAGE_QUALITY} -comment "made with linux and love" "${FILE:0:-4}.webp"
        done;
    else
        for FILE in *.[jJ][pP][gG];
        do
            convert ${FILE} -verbose -quality ${IMAGE_QUALITY} -comment "made with linux and love" "${FILE:0:-4}.webp"
        done;
    fi
}



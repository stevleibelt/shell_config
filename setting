#!/bin/bash
####
# Used to configure used software like
#   * this project
#   * bash
#   * grep
#   * ssh
#   * vim
####
# @author stev leibelt <artodeto@bazzline.net>
# @since 2013-04-24
####

#https://wiki.archlinux.org/index.php/Xterm#TERM_Environmental_Variable
#export GREP_OPTIONS='--color=auto'
#https://bbs.archlinux.org/viewtopic.php?pid=1478573
unset GREP_OPTIONS

export LESS=-R
export LESS_TERMCAP_me=$(printf '\e[0m')
export LESS_TERMCAP_se=$(printf '\e[0m')
export LESS_TERMCAP_ue=$(printf '\e[0m')
export LESS_TERMCAP_mb=$(printf '\e[1;32m')
export LESS_TERMCAP_md=$(printf '\e[1;34m')
export LESS_TERMCAP_us=$(printf '\e[1;32m')
export LESS_TERMCAP_so=$(printf '\e[1;44;1m')

#bo: detect current os
CURRENT_UNAME_OUTPUT="$(uname -s)"
NET_BAZZLINE_OPERATION_SYSTEM_IS_LINUX=0
NET_BAZZLINE_OPERATION_SYSTEM_IS_WINDOWS=0
case "${CURRENT_UNAME_OUTPUT}" in
    Linux*)     NET_BAZZLINE_OPERATION_SYSTEM_IS_LINUX=1
        ;;
    MSYS_NT*)   NET_BAZZLINE_OPERATION_SYSTEM_IS_WINDOWS=1
        ;;
    *)
        ;;
esac
#eo: detect current os

#either you are using an lts kernel or not: uname -a | grep -i lts
NET_BAZZLINE_IS_LTS_KERNEL=1
#add all you known interfaces in here
NET_BAZZLINE_INTERFACES=()
#count number of CPU cores
#@see: https://stackoverflow.com/questions/6481005/how-to-obtain-the-number-of-cpus-cores-in-linux-from-the-command-line
NET_BAZZLINE_NUMBER_OF_CPU_CORES=$(grep ^cpu\\scores /proc/cpuinfo | uniq |  awk '{print $4}')
#allowed are [apk, apt, none, pacman, pacget]
NET_BAZZLINE_PACKAGE_MANAGER='none'
#either write statistics of function usage or not
#1 turns it on, all other values disables it
NET_BAZZLINE_RECORD_FUNCTION_USAGE=0
#timeout in minutes to forget ssh password
NET_BAZZLINE_REMEMBER_SSH_PASSWORD_TIMEOUT_IN_MINUTES=30
#add port where your secure connection is listen on (via ssh -D)
NET_BAZZLINE_SECURE_CONNECTION_PORT=0

#### will be replaced from configuration.sh
#enables (1) or disables (0) acpi support
if [[ -f /usr/bin/acpi ]];
then
    NET_BAZZLINE_ACPI_IS_AVAILABLE=1
else
    NET_BAZZLINE_ACPI_IS_AVAILABLE=0
fi

NET_BAZZLINE_CACHE_PATH="${HOME}/.cache/net_bazzline"

#enables (1) or disables (0) php support
if [[ -x '/usr/bin/php' ]];
then
    NET_BAZZLINE_PHP_IS_AVAILABLE=1
else
    NET_BAZZLINE_PHP_IS_AVAILABLE=0
fi

#enables (1) or disables (0) powerstate support
if [[ -x '/sys/power/state' ]];
then
    NET_BAZZLINE_POWERSTATE_IS_AVAILABLE=1
else
    NET_BAZZLINE_POWERSTATE_IS_AVAILABLE=0
fi

if [[ -f /usr/bin/parallel ]];
then
    NET_BAZZLINE_PARALLEL_IS_AVAILABLE=1
else
    NET_BAZZLINE_PARALLEL_IS_AVAILABLE=0
fi

#enables (1) or disables (0) pulseaudio support
if [[ -f /usr/bin/pulseaudio ]];
then
    NET_BAZZLINE_PULSEAUDIO_IS_AVAILABLE=1
else
    NET_BAZZLINE_PULSEAUDIO_IS_AVAILABLE=0
fi

#enables (1) or disables (0) svn support
if [[ -f /usr/bin/svn ]];
then
    NET_BAZZLINE_SVN_IS_AVAILABLE=1
else
    NET_BAZZLINE_SVN_IS_AVAILABLE=0
fi

#enables (1) or disables (0) systemd support
if [[ -d /usr/lib/systemd ]];
then
    NET_BAZZLINE_SYSTEMD_IS_AVAILABLE=1
else
    NET_BAZZLINE_SYSTEMD_IS_AVAILABLE=0
fi

#enables (1) or disables (0) virtualbox support
if [[ -f /usr/bin/virtualbox ]];
then
    NET_BAZZLINE_VIRTUALBOX_IS_AVAILABLE=1
else
    NET_BAZZLINE_VIRTUALBOX_IS_AVAILABLE=0
fi

if [[ -d /usr/include/webp ]];
then
    NET_BAZZLINE_WEBP_IS_AVAILABLE=1
else
    NET_BAZZLINE_WEBP_IS_AVAILABLE=0
fi

#enables (1) or disables (0) zfs support
if [[ -f /usr/bin/zpool ]];
then
    NET_BAZZLINE_ZFS_IS_AVAILABLE=1
    #default zfs pool if non is provided
    NET_BAZZLINE_ZFS_DEFAULT_POOL='zpool'
    declare -a NET_BAZZLINE_ZFS_LIST_OF_POOLS_TO_SCRUB=("zpool");
else
    NET_BAZZLINE_ZFS_IS_AVAILABLE=0
fi
#### will be replaced from configuration.sh

#https://wiki.archlinux.org/index.php/Bash
# faster completion
set show-all-if-ambiguous on
set show-all-if-unmodified on

#arrow keys in 8 bit ANSI mode
#bind "\e[C": forward-word
#bind "\e[D": backward-word

####
#@see: https://opensource.com/article/18/5/bash-tricks
#allow bash history for multiple users
shopt -s histappend
#enable spell support to guess/correct "/tpm" to "/tmp"
shopt -s cdspell
#enable colors
eval "`dircolors -b`"
####

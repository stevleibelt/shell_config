#####
# If one value is given, mkdir -p plus cd is called.
# If multiple values are given. mkdir is called.
#
# @author stev leibelt
# @since 2013-01-05
####
function net_bazzline_mkdir ()
{
  #check if at least one argument is supplied
  if [[ $# -eq 0 ]]; then
    echo "No arguments supplied"
    return 1
  fi

  #if one argument is supplied, create dir and
  # change to it
  if [[ $# -eq 1 ]]; then
    mkdir -p "$1" 
    cd "$1"
    return 0
  fi

  #if more then one argument is supplied
  # execute default mkdir
  if [[ $# -gt 1 ]]; then
    mkdir $@
    return 0
  fi
}

#####
# You can change $i levels by using cd $i
#
# @author stev leibelt
# @since 2013-01-30
####
function net_bazzline_cd ()
{
  #is numeric value?
  if [[ `expr $1 + 1 2> /dev/null` ]]; then
    for (( i=1; i <= $1; i++))
    do
      cd ..
    done
  else
    cd "$1"
  fi
}

#####
# Combines ps aux and grep
#
# @author stev leibelt
# @since 2013-01-30
####
function net_bazzline_psgrep ()
{
  if [[ $# -eq 1 ]]; then
    ps aux | grep "$1"
  fi
}

#####
# Calls svn diff for two repositories.
# Call $repositoryUrlOne $repositoryUrlTwo $filePath
#
# @author stev leibelt
# @since 2013-01-30
####
function net_bazzline_svn_diff ()
{
  if [[ $# -eq 3 ]]; then
    svn diff "$1""/""$3" "$2""/""$3"
  else
    echo 'No valid arguments supplied'
  fi
}

####
# compress given directories into tar.gz
#
# @author stev leibelt
# @since 2013-02-02
####
function net_bazzline_compress ()
{
  if [[ $# -lt 2 ]]; then
    echo 'No valid arguments supplied.'
    echo 'Try net_bazzline_compress $nameOfCompressedFile $file1 [$file2]'

    exit 1
  fi

  FILENAME_TAR="$1".tar.gz
  shift

  tar -zcf "$FILENAME_TAR" "$@"
}

####
# compress given directories into tar.gz
#
# @author stev leibelt
# @since 2013-02-02
####
function net_bazzline_decompress ()
{
  if [[ $# -lt 1 ]]; then
    echo 'No valid arguments supplied.'
    echo 'Try net_bazzline_decompress $nameOfCompressedFile [$pathToDecompress]'

    exit 1
  fi

  if [[ $# -eq 1 ]]; then
    tar -zxf "$1"
  else
    tar -zxf "$1" -C "$2"
  fi
}
